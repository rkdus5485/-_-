<!doctype html>
<html lang="en">
 <head>
  <meta charset="UTF-8">
  <title>Backend_description</title>
<script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
       <style type="text/css">
       :root {
 --input-padding-x: 1.5rem;
 --input-padding-y: .75rem;
}

body {
 background: #007bff;
 background: linear-gradient(to right, #0062E6, #33AEFF);
}
#scoreBtn{
  border: 0;
  border-radius: 1rem;
  color: white;
  font-size:20px;
  background-color: #42423E;
  padding: 5px;
  width:15%;
  font-weight: bold;
  border-collapse: collapse;
  display: inline-block;
}

.card-signin {
 border: 0;
 border-radius: 1rem;
 background: #fff;
 text-align : right;
 box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);
}

.card-signin .card-title {
 margin-bottom: 2rem;
 font-weight: 300;
 text-align: center;      
 font-size: 1.5rem;

}

.card-signin .card-body {
 padding: 2rem;
 text-align: center;   
}


        </style>
<body>
 <div class="container">
   <div class="row">
     <div class="col-sm-9 col-md-7 col-lg-5 mx-auto">
       <div class="card card-signin my-5">
         <br>
                         <td class='alignRight'>
			<input type="button" onclick="location.href='http://webdev.iptime.org:8080/kgy/Game_Description_select.html'" value="X" id='scoreBtn'style=background-color:red></td>ㅤㅤ
         <div class="card-body">
           <h5 class="card-title text-center" style="font-weight:bold;color:#0054FF;">[Back_End part]</h5>
           <form class="form-signin" action="#">
           
    <h3>2016007701 김가연<br>2016007838 심유라<br><a href="https://github.com/rkdus5485/project/tree/back_end">Back_End branch</a></h3>
 
1. maingame_score.jsp, maingame_timer.jsp<br>
https://dororongju.tistory.com/103 여기에 있는 오픈 소스를 사용했고, <br>
<img src="https://user-images.githubusercontent.com/45381907/85260211-4779f580-b4a5-11ea-8277-59ad18fd6531.png" width="300" height="500"><br><br>

게임 진행 중에 타이머가 실행되는 부분은 
http://happycgi.com/7708 여기에 있는 코드를 사용했습니다.<br>
      타이머 사진<br>
<img src="https://user-images.githubusercontent.com/45381907/85260244-506ac700-b4a5-11ea-9f92-80ce37fed13b.PNG" width="300" height="100"><br><br>
그리고 다른 코드들은 w3school에 있는 코드를 참고하여 만들었습니다.<br><br>

2. checkUsername.jsp<br>
회원 가입 시 입력한 username과 이미 회원가입을 해서 데이터 베이스에 저장된 username과 비교를 하여, 중복된 username 있으면 회원가입을 하지 못하도록 해주는 jsp파일입니다.<br><br>



3. loginaction.jsp<br>
회원가입 시 입력했던 username과 비밀번호를 데이터베이스에 있던 값들과 비교하여 회원가입 목록에 있는 username과 비밀번호가 일치하면 로그인을 할 수 있게 해줍니다.<br>
일치하지 않으면 username과 비밀번호를 비교하라는 알림메세지가 나오도록 되어있습니다. <br>
이 파일에서는 입력된 username 값은 session에 저장됩니다.<br><br>



4. gamesignup.jsp <br>
처음 회원가입을 할 때 입력한 username을 checkUsername.jsp 파일을 이용해서 중복확인을 하도록 합니다.<br>
그리고 중복확인을 완료하면 gamesignup_1.jsp 파일로 중복확인 한 username은 옮겨지게 됩니다.<br>
gamesignup_1.jsp파일에 넘겨진 아이디 값은 다시 수정할 수 없도록 설정되어있습니다. <br><br>



5. maingame_score.jsp<br>
로그인 하지 않으면 username이 session에 저장되지 않아 로그인 페이지로 이동합니다.<br>
로그인 후 게임을 실행하고 그림 10 쌍을 맞추면 insert_scoremode.jsp로 이동합니다. 그림을 맞추면 +10점, 틀리면 -5점을 받습니다.<br>
아래쪽에 session에 저장된 username과 자신의 최고점수를 보여줍니다.<br>
최고기록 코드<br>
<img src="https://user-images.githubusercontent.com/45381907/85221260-5ef5a780-b3ed-11ea-8fce-7b8f725cd866.PNG" width="300" height="200"><br><br>
점수 +- 되는 코드<br>
<img src="https://user-images.githubusercontent.com/45381907/85221248-408fac00-b3ed-11ea-9a76-9dbe22c9e3a4.PNG" width="300" height="500"><br><br>




6. insert_scoremode.jsp<br>
maingame_score.jsp에서 현재점수 'score'을 'point'라는 변수로 받아 옵니다.<br>
DB에 저장된 자신의 최고 점수와 현재 점수 'point'를 비교하여 point가 더 높으면 DB에 update합니다. 그 후 Scoreend.jsp로 'point'를 'point_r'이라는 이름과 값과 함께 이동합니다.<br><br>



7. Scoreend.jsp<br>
화면 위쪽에 이번 게임에서 받은 점수인 'point_r'을 보여주고<br>
화면 아래쪽에 score mode의 1,2,3등의 기록을 보여줍니다.<br><br>


8.maingame_timer.jsp<br>
로그인 하지 않으면 username이 session에 저장되지 않아 로그인 페이지로 이동합니다.<br>
로그인 후 게임을 실행하고 그림 10쌍을 맞추면 insert_timermode.jsp로 이동합니다.<br>
아래쪽에 session에 저장된 username과 자신의 최고 기록을 보여줍니다.<br>
최고기록 코드<br>
<img src="https://user-images.githubusercontent.com/45381907/85221256-58673000-b3ed-11ea-9f7e-cdf4eee2eab6.PNG" width="400" height="400"><br><br>
바꾼 timer code<br>
<img src="https://user-images.githubusercontent.com/45381907/85221253-4eddc800-b3ed-11ea-819d-b3aa3251c718.PNG" width="300" height="400"><br><br>


9. insert_timermode.jsp<br>
maingame_timer.jsp에서 현재 기록 'time'을 'time'이라는 변수로 받아 옵니다.<br>
DB에 저장된 자신의 최고 기록과 현재 기록 'time'을 비교하여 time이 더 높으면 DB에 update 합니다.<br>
  그 후 Timerend.jsp로 'time'을 'time_r'이라는 이름과 값과 함께 이동합니다.<br><br>



10. Timerend.jsp<br>
화면 위쪽에 이번 게임에서 받은 점수인 'time_r'을 보여주고
화면 아래쪽에 timer mode의 1,2,3등의 기록을 보여줍니다.<br><br>
  
 
           </form>
         </div>
       </div>
     </div>
   </div>
 </div>
</body>
